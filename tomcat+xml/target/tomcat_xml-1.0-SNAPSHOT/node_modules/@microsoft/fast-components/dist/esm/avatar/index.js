import { __decorate } from "tslib";
import { attr, html, when } from "@microsoft/fast-element";
import { Avatar as FoundationAvatar, avatarTemplate as template, } from "@microsoft/fast-foundation";
import { avatarStyles as styles } from "./avatar.styles";
/**
 * The FAST Avatar Class
 * @public
 *
 */
export class Avatar extends FoundationAvatar {
}
__decorate([
    attr({ attribute: "src" })
], Avatar.prototype, "imgSrc", void 0);
__decorate([
    attr
], Avatar.prototype, "alt", void 0);
/**
 * The FAST Avatar Template for Images
 *  @public
 *
 */
export const imgTemplate = html `
    ${when(x => x.imgSrc, html `
            <img
                src="${x => x.imgSrc}"
                alt="${x => x.alt}"
                slot="media"
                class="media"
                part="media"
            />
        `)}
`;
/**
 * A function that returns a {@link @microsoft/fast-foundation#Avatar} registration for configuring the component with a DesignSystem.
 *  {@link @microsoft/fast-foundation#avatarTemplate}
 *
 *
 * @public
 * @remarks
 * Generates HTML Element: `<fast-avatar>`
 */
export const fastAvatar = Avatar.compose({
    baseName: "avatar",
    baseClass: FoundationAvatar,
    template,
    styles,
    media: imgTemplate,
    shadowOptions: {
        delegatesFocus: true,
    },
});
export { styles as avatarStyles };
